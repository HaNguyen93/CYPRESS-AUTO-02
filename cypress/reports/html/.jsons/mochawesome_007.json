{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-10-10T17:09:14.826Z",
    "end": "2023-10-10T17:09:19.867Z",
    "duration": 5041,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "782395c7-dfa0-4d6c-8c4d-cdde2fb50159",
      "title": "",
      "fullFile": "cypress\\e2e\\API-Test\\2.PostCall.cy.js",
      "file": "cypress\\e2e\\API-Test\\2.PostCall.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "90958410-a239-49a2-b9d8-92f87446fd79",
          "title": "post call",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "post call- using data from fixture",
              "fullTitle": "post call post call- using data from fixture",
              "timedOut": null,
              "duration": 4797,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos\",\n    \"value\": \"cypress\\\\e2e\\\\API-Test\\\\2.PostCall.cy.js\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        {\n          \"title\": \"Failed screenshot\",\n          \"value\": \"\\\\API-Test\\\\2.PostCall.cy.js\\\\post call -- post call- using data from fixture (failed).png\"\n        }\n      ]\n    ]\n  }\n]",
              "code": "cy.fixture(\"user_data\").then(data => {\n  const requestBody = data;\n  cy.request({\n    method: 'POST',\n    url: 'https://reqres.in/api/users/',\n    body: requestBody\n  }).then(response => {\n    expect(response.status).to.eq(201);\n    expect(response.body.name).to.eq(requestBody.name);\n    expect(response.body.job).to.eq(requestBody.job);\n    expect(response.body).has.property('name', requestBody.name);\n    expect(response.body).has.property('job', requestBody.name);\n  });\n});",
              "err": {
                "message": "AssertionError: expected { Object (name, job, ...) } to have property 'job' of 'ha nguuyen1', but got 'test leader1'",
                "estack": "AssertionError: expected { Object (name, job, ...) } to have property 'job' of 'ha nguuyen1', but got 'test leader1'\n    at Context.eval (webpack:///./cypress/e2e/API-Test/2.PostCall.cy.js:45:38)",
                "diff": "- 'test leader1'\n+ 'ha nguuyen1'\n"
              },
              "uuid": "ff91a08c-c853-4a1a-acdc-12f89920036f",
              "parentUUID": "90958410-a239-49a2-b9d8-92f87446fd79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ff91a08c-c853-4a1a-acdc-12f89920036f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4797,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}